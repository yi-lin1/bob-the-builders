import geopandas
import folium
import pandas as pd
import base64
import io

"""
def plt_show(plt, width=500, dpi=100):
    # Converts matplotlib plt to image data string
    #   plt is the matplotlib pyplot or figure
    #   width is the width of the graph image in pixels
    #   dpi (dots per inch) is the resolution of the image
    bytes = io.BytesIO()
    plt.savefig(bytes, format='png', dpi=dpi)  # Save as png image
    if hasattr(plt, "close"):
        plt.close()
    bytes.seek(0)
    base64_string = "data:image/png;base64," + \
        base64.b64encode(bytes.getvalue()).decode("utf-8")
    return "<img src='" + base64_string + "' width='" + str(width) + "'>"


def main(inputs):
    # (1) Folium map
    folium_map = folium.Map(location=[40.730610, -73.935242], zoom_start=9, tiles="OpenStreetMap")
    folium_map = folium_map._repr_html_()

    # (2) Geopandas map
    path_to_data = geopandas.datasets.get_path("nybb")
    gdf = geopandas.read_file(path_to_data)

    geopandas_plot = gdf.plot()
    geopandas_plot = plt_show(geopandas_plot.figure)

    geopandas_explore = gdf.explore()
    geopandas_explore = geopandas_explore._repr_html_()
    """
def main(inputs):

    soil_type = inputs['soil_type']
    k = inputs['hydraulic_conductivity']
    K = 'hydraulic_conductivity'

    print(soil_type)
    if soil_type == "Fine Sand":
        if k == 0:
            K == 2*10^-7
        if k == 0.5:
            K == (2*10^-4 + 2*10^-7)/2
        if k == 1:
            K == 2*10^-4
    if soil_type == "Medium Sand":
        if k == 0:
            K == 9*10^-7
        if k == 0.5:
            K == (5*10^-4 + 9*10^-7)/2
        if k == 1:
            K == 5*10^4
    if soil_type == "Coarse Sand":
        if k == 0:
            K == 9*10^-7
        if k == 0.5:
            K == (6*10^-4 + 9*10^-7)/2
        if k == 1:
            K == 6*10^-4
    if soil_type == "Gravelly Sand (Poorly Graded)":
        if k == 0:
            K == 2.55*10^-5
        if k == 0.5:
            K == (5.35*10^-4 + 2.55*10^-5)/2
        if k == 1:
            K == 5.35*10^-4
    if soil_type == "Gravelly Sand (Well Graded)":
        if k == 0:
            K == 1*10^-8
        if k == 0.5:
            K == (1*10^-6 + 1*10^-8)/2
        if k == 1:
            K == 1*10^-6
    if soil_type == "Silty Sand":
        if k == 0:
            K == 1*10^-8
        if k == 0.5:
            K == (5*10^-6 + 1*10^-8)/2
        if k == 1:
            K == 5*10^-6
    if soil_type == "Clayey Sand":
        if k == 0:
            K == 5.5*10^-9
        if k == 0.5:
            K == (5.5*10^-6 + 5.5*10^-9)/2
        if k == 1:
            K == 5.5*10^-6
    if soil_type == "Gravel":
        if k == 0:
            K ==  3*10^-4
        if k == 0.5:
            K == (3*10^-4 + 3*10^-2)/2
        if k == 1:
            K == 3*10^-2
    if soil_type == "Silt (Compacted)":
        if k == 0:
            K == 7*10^-10
        if k == 0.5:
            K ==  (7*10^-10 + 7*10^-8)/2
        if k == 1:
            K == 7*10^-8
    if soil_type == "Clay":
        if k == 0:
            K == 1*10^-11
        if k == 0.5:
            K == (1*10^-11 + 4.7*10^-9)/2
        if k == 1:
            K == 4.7*10^-9
            
 #seepage velocity calculations
 i = inputs['hydraulic_gradient']
 ne = inputs['ne']
 vs = (K*i)/ne
 #length calculations 
 

            return {"k": k}







    #return {"folium_map": folium_map, 
            #"geopandas_plot": geopandas_plot, 
            #"geopandas_explore": geopandas_explore,
            #"soil_type": soil_type}


# def main(inputs):
#     # seepage velocity calculations 
#     soil_type = inputs['soil_type']
#     print(soil_type)
#     if soil_type == "Fine Sand":
#         print("hello")
#     return{

#         "soil_type": soil_type
#     }
